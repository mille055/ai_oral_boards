build-backend:
  image: rust:slim
  before_script:
    - echo "Starting Rust Lambda build process"
    - echo "Current environment:"
    - env
    - echo "Operating System details:"
    - cat /etc/os-release
    - echo "Rust version:"
    - rustc --version
    - echo "Cargo version:"
    - cargo --version
    
    # Update and install dependencies
    - apt-get update -qy
    - apt-get install -y curl zip unzip file

    # Install cargo-lambda
    - echo "Installing cargo-lambda"
    - curl -L --proto '=https' --tlsv1.2 -sSf https://raw.githubusercontent.com/cargo-lambda/cargo-lambda/main/install.sh | sh
    
    # Rust toolchain setup
    - echo "Setting up Rust toolchain"
    - rustup update
    - rustup target add aarch64-unknown-linux-gnu
    
    # Print out target information
    - echo "Installed Rust targets:"
    - rustup target list
  
  script:
    # Detailed build process logging
    - echo "Starting cargo build"
    - echo "Current directory contents:"
    - ls -la
    
    # Build with verbose output
    - cargo lambda build --release --verbose
    
    # Verify build artifacts
    - echo "Checking build artifacts:"
    - ls -la target/lambda/radiology-teaching-files/
    
    # Binary verification
    - echo "Verifying bootstrap binary:"
    - file target/lambda/radiology-teaching-files/bootstrap
    - ldd target/lambda/radiology-teaching-files/bootstrap || echo "Dynamic linking check not supported"
    
    # Size and permissions check
    - echo "Bootstrap binary details:"
    - stat target/lambda/radiology-teaching-files/bootstrap
    
    # Copy and prepare artifacts
    - mkdir -p target/lambda/radiology-teaching-files
    - cp target/lambda/radiology-teaching-files/bootstrap target/lambda/radiology-teaching-files/
    - chmod +x target/lambda/radiology-teaching-files/bootstrap
    
    # Final verification
    - echo "Final bootstrap binary check:"
    - file target/lambda/radiology-teaching-files/bootstrap
  
  artifacts:
    paths:
      - target/lambda/radiology-teaching-files/
    expire_in: 1 week
    when: always  # Ensure artifacts are saved even if the job fails
  
  dependencies:
    - build-frontend