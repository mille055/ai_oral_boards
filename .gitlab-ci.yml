stages:
  - build-test
  - deploy

variables:
  RUST_VERSION: "stable"
  AWS_DEFAULT_REGION: "us-east-1"
  LAMBDA_FUNCTION_NAME: "radiology-teaching-files"
  S3_BUCKET: "radiology-teaching-files"
  DYNAMODB_TABLE: "RadiologyTeachingFiles"

build-test:
  image: rust:slim
  before_script:
    - apt-get update -qy
    - apt-get install -y curl jq wget zip unzip
    # Install cross-compilation tools
    - rustup target add x86_64-unknown-linux-musl
  stage: build-test
  script:
    # Build specifically for Lambda using musl (static linking)
    - RUSTFLAGS="-C target-feature=+crt-static" cargo build --release --target x86_64-unknown-linux-musl
    
    # Create the Lambda bootstrap file
    - mkdir -p target/lambda/radiology-teaching-files
    - cp target/x86_64-unknown-linux-musl/release/radiology-teaching-files target/lambda/radiology-teaching-files/bootstrap || cp target/x86_64-unknown-linux-musl/release/radiology_teaching_files target/lambda/radiology-teaching-files/bootstrap
    - chmod +x target/lambda/radiology-teaching-files/bootstrap
  artifacts:
    paths:
      - target/lambda/radiology-teaching-files/
    expire_in: 1 week

deploy:
  stage: deploy
  image: 
    name: amazon/aws-cli:latest
    entrypoint: [""]
  before_script:
    - yum update -y
    - yum install -y zip unzip
  script:
    # Create zip package
    - mkdir -p deployment
    - cp target/lambda/radiology-teaching-files/bootstrap deployment/
    - cd deployment && zip -j function.zip bootstrap && cd ..
    
    # Update Lambda function
    - aws lambda update-function-code --function-name $LAMBDA_FUNCTION_NAME --zip-file fileb://deployment/function.zip

  dependencies:
    - build-test
  only:
    - main
  environment:
    name: production