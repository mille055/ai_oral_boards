stages:
  - build-frontend
  - build-backend
  - deploy

variables:
  RUST_VERSION: "stable"
  AWS_DEFAULT_REGION: "us-east-1"
  LAMBDA_FUNCTION_NAME: "radiology-teaching-files"
  S3_BUCKET: "radiology-teaching-files"
  DYNAMODB_TABLE: "RadiologyTeachingFiles"

# Frontend Build
build-frontend:
  image: node:18
  before_script:
    - cd frontend
    - npm install
  script:
    - npm run lint # Ensures JavaScript code quality
    - npm run build # Builds the frontend assets
  artifacts:
    paths:
      - frontend/build/
    expire_in: 1 week
  stage: build-frontend

# Backend (Rust) Build
build-backend:
  image: rust:slim
  before_script:
    - apt-get update -qy
    - apt-get install -y curl jq wget zip unzip musl-tools build-essential
    - apt-get install -y gcc-aarch64-linux-gnu libc6-dev-arm64-cross
    - rustup target add aarch64-unknown-linux-musl
    - export CARGO_TARGET_AARCH64_UNKNOWN_LINUX_GNU_LINKER=aarch64-linux-gnu-gcc
    - export CC_aarch64_unknown_linux_gnu=aarch64-linux-gnu-gcc
    - export CXX_aarch64_unknown_linux_gnu=aarch64-linux-gnu-g++
  stage: build-backend
  script:
    - cargo build --release --target aarch64-unknown-linux-musl
    - mkdir -p target/lambda/radiology-teaching-files
    - cp target/aarch64-unknown-linux-musl/release/radiology-teaching-files target/lambda/radiology-teaching-files/bootstrap || cp target/aarch64-unknown-linux-musl/release/radiology_teaching_files target/lambda/radiology-teaching-files/bootstrap
    - chmod +x target/lambda/radiology-teaching-files/bootstrap
    - apt-get install -y file
    - file target/lambda/radiology-teaching-files/bootstrap
  artifacts:
    paths:
      - target/lambda/radiology-teaching-files/
    expire_in: 1 week
  dependencies:
    - build-frontend

# Deployment
deploy:
  stage: deploy
  image: amazon/aws-cli:latest
  before_script:
    - yum update -y
    - yum install -y zip unzip
  script:
    # Ensure S3 bucket exists
    - if ! aws s3api head-bucket --bucket $S3_BUCKET 2>/dev/null; then
        aws s3 mb s3://$S3_BUCKET;
      fi
    # Upload frontend files
    - aws s3 sync frontend/build s3://$S3_BUCKET --delete
    # Package and deploy the Lambda function
    - mkdir -p deployment
    - cp target/lambda/radiology-teaching-files/bootstrap deployment/
    - cd deployment && zip -j function.zip bootstrap && cd ..
    - aws lambda update-function-code --function-name $LAMBDA_FUNCTION_NAME --zip-file fileb://deployment/function.zip
  dependencies:
    - build-frontend
    - build-backend
  only:
    - main
  environment:
    name: production
