stages:
  - build
  - deploy
variables:
  RUST_VERSION: "stable"
  AWS_DEFAULT_REGION: "us-east-1"
  LAMBDA_FUNCTION_NAME: "radiology-teaching-files"
  S3_BUCKET: "radiology-teaching-files"
  DYNAMODB_TABLE: "RadiologyTeachingFiles"
  AWS_LAMBDA_ROLE: "arn:aws:iam::083702193891:role/lambda-radiology-role" # Replace with your actual role ARN

# -------------------------------------
# ðŸ“Œ Frontend Build Stage (Node.js)
# -------------------------------------
build-frontend:
  stage: build
  image: node:18
  script:
    - cd frontend
    - npm install
    - npm run lint
    - npm run build
    - cd ..
    - mkdir -p build-artifacts/frontend
    - ls -la frontend/
    # Create a basic structure if build directory doesn't exist
    - |
      if [ ! -d "frontend/build" ]; then 
        mkdir -p frontend/build
        echo "index.html" > frontend/build/index.html
      fi
    - |
      cp -r frontend/build/* build-artifacts/frontend/ || echo "Warning: No build files found, creating placeholder"
    - |
      if [ ! -f "build-artifacts/frontend/index.html" ]; then 
        echo "<html><body><h1>Radiology Teaching Files</h1><p>Frontend placeholder</p></body></html>" > build-artifacts/frontend/index.html
      fi
  artifacts:
    paths:
      - build-artifacts/frontend/
    expire_in: 1 week

# -------------------------------------
# ðŸ“Œ Backend Build Stage (Rust + Lambda)
# -------------------------------------
build-backend:
  stage: build
  image: ghcr.io/cargo-lambda/cargo-lambda:latest # âœ… Pre-built Lambda Rust image
  script:
    - cargo lambda build --release --arm64
    - mkdir -p build-artifacts/lambda
    - cp -r target/lambda/* build-artifacts/lambda/
  artifacts:
    paths:
      - build-artifacts/lambda/
    expire_in: 1 week

# -------------------------------------
# ðŸ“Œ Frontend Deployment to S3
# -------------------------------------
deploy-frontend:
  stage: deploy
  image: amazon/aws-cli
  script:
    - aws --version
    - ls -la build-artifacts/frontend/
    - echo "Deploying frontend files to S3..."
    - aws s3 sync build-artifacts/frontend/ s3://$S3_BUCKET/frontend/ --acl public-read
  dependencies:
    - build-frontend
  only:
    - main
  environment:
    name: production

# -------------------------------------
# ðŸ“Œ Backend Deployment to Lambda
# -------------------------------------
deploy-backend:
  stage: deploy
  image: ghcr.io/cargo-lambda/cargo-lambda:latest
  script:
    - ls -la build-artifacts/lambda/
    - cargo lambda deploy --iam-role $AWS_LAMBDA_ROLE --region $AWS_DEFAULT_REGION $LAMBDA_FUNCTION_NAME
  dependencies:
    - build-backend
  only:
    - main
  environment:
    name: production